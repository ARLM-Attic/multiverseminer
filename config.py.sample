# Currently only google is supported

from authomatic.providers import oauth2
import os


CONFIG = {
    'google': {
        'class_': oauth2.Google,
        'consumer_key': 'you need the actual oauthclientID here',
        'consumer_secret': 'and you need the actual client secret here',
        'scope': ['email', 'openid']

    }
    # we can add more auth methods here as long as we add login buttons for them...
}


class BaseConfiguration(object):
    # Statement for enabling the development environment
    DEBUG = True

    # Define the application directory
    basedir = os.path.abspath(os.path.dirname(__file__))
    SECRET_KEY = "c is for cookie"

    # SQLite for this example
    SQLALCHEMY_DATABASE_URI = 'sqlite:///:memory:'

    THREADS_PER_PAGE = 2

    # Enable protection agains *Cross-site Request Forgery (CSRF)*
    CSRF_ENABLED = True

    # Use a secure, unique and absolutely secret key for
    # signing the data.
    CSRF_SESSION_KEY = "wwwweeeee."


class TestConfiguration(BaseConfiguration):
    DEBUG = True
    SQLALCHEMY_DATABASE_URI = 'sqlite:///:memory:'
    TESTING = True
    WTF_CSRF_ENABLED = False
    HASH_ROUNDS = 1
